name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read
  actions: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Cargo Check
        run: cargo check --all --verbose --locked

      - name: Check formatting
        run: cargo fmt --check --verbose

      - name: Run clippy
        run: cargo clippy --all --verbose --locked

  test:
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            rust: stable
          - os: ubuntu-latest
            rust: beta
          - os: macos-latest
            rust: stable
          - os: windows-latest
            rust: stable

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: ./.github/actions/cache-cargo

      - name: Build
        run: cargo build --verbose --locked

      - name: Run tests
        run: |
          cargo test --verbose --all --locked 2>&1 | tee test-output.log

      - name: Upload test log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-log-${{ matrix.os }}-${{ matrix.rust }}
          path: test-output.log

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache dependencies
        uses: ./.github/actions/cache-cargo

      - name: Install cargo-tarpaulin
        run: |
          if ! command -v cargo-tarpaulin &> /dev/null; then
            cargo install cargo-tarpaulin
          fi

      - name: Generate coverage report
        run: |
          cargo tarpaulin \
            --verbose \
            --all-features \
            --all \
            --timeout 120 \
            --out Xml \
            --engine llvm

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        uses: ./.github/actions/cache-cargo

      - name: Install cargo-audit
        run: |
          if ! command -v cargo-audit &> /dev/null; then
            cargo install cargo-audit
          fi

      - name: Security audit
        run: cargo audit
